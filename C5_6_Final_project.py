# С5.6. Итоговый проект

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#
# Вот и всё, начальная школа закончилась. Пришла пора шагнуть во взрослую
# разраберскую жизнь. Вам предстоит написать проект, который вы с гордостью
# сможете показать своим друзьям/работодателю/внукам, сказав, что этот проект
# был вашим первым детищем. Этот проект проверят наши замечательные менторы
# и дадут вам обратную связь.
#
# А поскольку начальная школа хоть и закончилась, но всё же это начальная школа,
# мы подготовили для вас серию скринкастов, в которой подробно и обстоятельно
# описывается каждый шаг написания похожего проекта. Это тоже будет бот, крайне
# похожий по функционалу, но с небольшими отличиями. Да чего уж вам рассказывать.
# Смотрите, сами всё и узнаете!
#
# Сначала нам понадобится создать бота.
#
# Написание бота. Часть 1
#
# Затем нужно будет написать обработчики, которые будут выполнять основную
# часть работы.
#
# Написание бота. Знакомство с API, пишем главный обработчик
#
# После этого мы доработаем наш код, начав исправлять ошибки, если вдруг что-то
# пойдёт не так.
#
# Написание бота. Обрабатываем ошибки
#
# После чего мы приведем наш код в порядок, разделив его по функционалу на
# разные файлы.
#
#
# Написание бота. Рефакторинг
#
# Далее мы окончательно сделаем нашего бота дружелюбным, и всё будет готово!
#
# Написание бота. Заключение
#
# Теперь, используя полученные знания, вы самостоятельно сможете написать
# очень похожего бота, который будет работать с обычными валютами.
#
# Задание
# Напишите Telegram-бота, в котором будет реализован следующий функционал:
#
#  1 Бот возвращает цену на определённое количество валюты (евро, доллар или
#     рубль).
#
#  2 При написании бота необходимо использовать библиотеку pytelegrambotapi.
#
#  3 Человек должен отправить сообщение боту в виде <имя валюты, цену которой
#     он хочет узнать> <имя валюты, в которой надо узнать цену первой валюты>
#     <количество первой валюты>.
#
#  4 При вводе команды /start или /help пользователю выводятся инструкции по
#     применению бота.
#
#  5 При вводе команды /values должна выводиться информация о всех доступных
#     валютах в читаемом виде.
#
#  6 Для получения курса валют необходимо использовать любое удобное
#     API и отправлять к нему запросы с помощью библиотеки Requests.
#
#  7 Для парсинга полученных ответов использовать библиотеку JSON.
#
#  8 При ошибке пользователя (например, введена неправильная или
#     несуществующая валюта или неправильно введено число) вызывать
#     собственно написанное исключение APIException с текстом пояснения ошибки.
#
#  9 Текст любой ошибки с указанием типа ошибки должен отправляться
#     пользователю в сообщения.
#
#  10 Для отправки запросов к API описать класс со статическим методом get_price(),
#     который принимает три аргумента и возвращает нужную сумму в валюте:
#       -  имя валюты, цену на которую надо узнать, — base;
#       - имя валюты, цену в которой надо узнать, — quote;
#       - количество переводимой валюты — amount.
#
#  11 Токен Telegram-бота хранить в специальном конфиге (можно использовать .py файл).
#
#  12 Все классы спрятать в файле extensions.py.
#
#
# Задание, оцениваемое ментором
# Итоговый проект 5.6 (PJ-02)
# Домашнее задание проверит ментор и поставит оценку. Если возникнут сложности,
# обращайтесь в канал модуля. Желаем успехов! ;)